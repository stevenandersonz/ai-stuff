I gave a friend an instruction and one input. The friend read the instruction and
wrote an output for every one of the input.\nHere are the input-output pairs:
INPUT: 
app.get("/todos", (req, res) => {
  res.send(Todos);
});
app.post("/todos", (req, res) => {
  const todo = {
    title: req.body.title,
    description: req.body.description,
    completed: false,
  };
  Todos.push(todo);
  res.send(todo);
});
app.get("/todos/:id", (req, res) => {
  let todo = Todos.find((todo) => todo.id === parseInt(req.params.id));
  res.send(todo);
});
app.put("/todos/:id", (req, res) => {
  let todo = Todos.find((todo) => todo.id === parseInt(req.params.id));
  todo.title = req.body.title;
  todo.description = req.body.description;
  todo.completed = req.body.completed;
  for (let i = 0; i < Todos.length; i++) {
    if (Todos[i].id === todo.id) {
      Todos[i] = todo;
    }
  }
  res.send(todo);
}); 
OUTPUT:[
  {
    path: "/todos",
    method: "GET",
    description: "Get all todos",
    request: {},
    response: {
      title: String,
      description: String,
      completed: Boolean
    }
  },
  {
    path: "/todos",
    method: "POST",
    description: "Create a new todo",
    request: {
      title: String,
      description: String,
      completed: Boolean
    },
    response: {
      title: String,
      description: String,
      completed: Boolean
    }
  },
  {
    path: "/todos/:id",
    method: "GET",
    description: "Get a single todo",
    request: {},
    response: {
      title: String,
      description: String,
      completed: Boolean
    }
  },
  {
    path: "/todos/:id",
    method: "PUT",
    description: "Update a single todo",
    request: {
      title: String,
      description: String,
      completed: Boolean
    },
    response: {
      title: String,
      description: String,
      completed: Boolean
    }
  }
]
the instruction was:<COMPLETE>